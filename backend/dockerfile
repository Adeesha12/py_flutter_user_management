
# Use official Python image
FROM python:3.11-slim

ENV PYTHONUNBUFFERED=1

WORKDIR /app/

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Install uv from prebuilt image
COPY --from=ghcr.io/astral-sh/uv:0.4.15 /uv /bin/uv

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Optional: Compile Python bytecode at build time
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy

# Copy dependency files
COPY pyproject.toml uv.lock /app/

# Sync dependencies (without installing project as editable)
RUN uv sync --frozen --no-install-project

# Copy rest of the code
COPY . /app/



COPY wait-for-postgres.sh /wait-for-postgres.sh
RUN chmod +x /wait-for-postgres.sh


# Collect static files and apply migrations
RUN python manage.py collectstatic --noinput || true
# RUN python manage.py migrate

# Expose port
EXPOSE 8000

ENTRYPOINT ["/wait-for-postgres.sh"]
# Start the app with Gunicorn
CMD ["gunicorn", "backend.wsgi:application", "--bind", "0.0.0.0:8000"]






















# # Use a Python slim base image
# FROM python:3.12-slim-bookworm

# # Install curl (required for uv installer) and git (needed by uv for some dependencies)
# RUN apt-get update && apt-get install -y --no-install-recommends curl git && rm -rf /var/lib/apt/lists/*

# # Install uv using the official installer script
# RUN curl -LsSf https://astral.sh/uv/install.sh | sh

# # Add uv to PATH
# ENV PATH="/root/.local/bin:$PATH"

# # Set working directory
# WORKDIR /app

# # Copy only dependency files first for better caching
# COPY ../pyproject.toml ../uv.lock ./

# # Sync dependencies using uv (locked to ensure reproducible builds)
# RUN uv sync --locked

# # Copy the rest of the backend source code
# COPY . .

# # Optionally expose port if needed (e.g., 8000)
# EXPOSE 8000

# # Run your server using uv run to ensure the environment is activated
# CMD ["uv", "run", "gunicorn", "backend.wsgi:application", "--bind", "0.0.0.0:8000"]
